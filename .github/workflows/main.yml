name: CI

on:
  push:
    branches:
      - "main"
    tags:
      - "v[0-9].[0-9]+.[0-9]+"
  pull_request:
    branches:
      - "main"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.5

      - name: Get Date
        id: get-date
        run: |
          echo "::set-output name=date::$(/bin/date -u "+%Y%m%d")"

      - name: Set up pnpm v6
        uses: pnpm/action-setup@v2.0.1
        with:
          version: 6.x.x
          run_install: false

      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: 'pnpm'

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: "0.88.1"
          extended: true

      - name: Cache Hugo
        uses: actions/cache@v2
        with:
          path: resources
          key: ${{ runner.os }}-nyerat-${{ steps.get-date.outputs.date }}
          restore-keys: |
            ${{ runner.os }}-nyerat-

      - name: Install dependencies
        run: pnpm i --frozen-lockfile

      - name: Run build
        run: pnpm build

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.5
        with:
          fetch-depth: 0

      - name: Get branch names
        id: branch-name
        uses: tj-actions/branch-names@v5
        with:
          strip_tag_prefix: "v"

      - name: Read changelog
        id: changelog-reader
        uses: mindsers/changelog-reader-action@v2
        with:
          version: ${{ steps.branch-name.outputs.tag }}
          path: CHANGELOG.md

      - name: Create/update release
        uses: ncipollo/release-action@v1
        with:
          tag: v${{ steps.changelog-reader.outputs.version }}
          name: v${{ steps.changelog-reader.outputs.version }}
          body: ${{ steps.changelog-reader.outputs.changes }}
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
